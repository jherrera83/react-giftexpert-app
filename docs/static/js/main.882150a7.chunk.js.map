{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACbC,mBAAS,IADI,mBAC1CC,EAD0C,KAC9BC,EAD8B,KAgBjD,OACC,0BAAMC,SAVc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAMd,2BACCO,KAAK,OACLC,MAAOT,EACPU,SAlBuB,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,Y,uBCPZG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEhBC,EAFgB,iDAEkCC,UAAUH,GAF5C,+DAGHI,MAAQF,GAHL,cAGhBG,EAHgB,gBAIDA,EAAKC,OAJJ,uBAIfC,EAJe,EAIfA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC7B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVd,kBAcfM,GAde,4CAAH,sDCYLO,EAVY,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAExC,OACC,yBAAKc,UAAU,0CACd,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCiBQO,EApBQ,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDf,SAACA,GAAc,IAAD,EAEbd,mBAAS,CAClCqB,KAAM,GACNa,SAAS,IAJ6B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAiBvC,OAVCC,qBAAU,WACTxB,EAAQC,GACPwB,MAAK,SAAAC,GACLH,EAAS,CACTf,KAAMkB,EACNL,SAAS,SAGR,CAACpB,IAEEqB,EDd2BK,CAAa1B,GAAjCa,EAF0B,EAEhCN,KAAca,EAFkB,EAElBA,QAEtB,OACC,oCACC,4BAAKpB,GAEHoB,GAAW,sCAEb,yBAAKJ,UAAU,aAEZH,EAAOJ,KAAI,SAAAC,GAAG,OAAI,kBAAC,EAAD,eAAaiB,IAAMjB,EAAIC,IAAQD,UEYxCkB,EAxBa,WAAO,IAAD,EACG1C,mBAAS,CAC5C,cAFgC,mBAC1B2C,EAD0B,KACd5C,EADc,KAKjC,OACC,oCACC,4CACC,kBAAC,EAAD,CAAaA,cAAeA,IAC7B,6BAEA,4BAEE4C,EAAWpB,KAAK,SAAAT,GAAQ,OACtB,kBAAC,EAAD,CACA2B,IAAQ3B,EACRA,SAAaA,UCfpB8B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.882150a7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\tconst [inputValue, setinputValue] = useState(\"\");\r\n\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetinputValue(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategories((cats) => [inputValue, ...cats]);\r\n\t\t\tsetinputValue(\"\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tonChange={handleInputChange}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default AddCategory;\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async(category) => {\r\n\t\t \r\n\tconst url =  `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=oHLy17MuT4nh8rPStmMgdiI91pxgXik8`\r\n\tconst resp = await fetch ( url );\r\n\tconst {data} = await resp.json();\r\n\r\n\tconst gifs = data.map (img => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images?.downsized_medium.url\r\n\t\t};\r\n\t});\r\n\t\r\n\treturn gifs; // retorna una promesa\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\t\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__bounce\">\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default GifGridItem;","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\tconst { data: images, loading } = useFetchGifs(category);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>{category}</h3>\r\n\r\n\t\t\t{ loading && <p>Loading</p> }\r\n\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\timages.map(img => <GifGridItem key= {img.id} {...img} />)\r\n\t\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n\r\n};\r\n\r\nexport default GifGrid;","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGif\";\r\n\r\nexport const useFetchGifs=(category) => {\r\n\r\n\tconst [state, setstate] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true\r\n\t});\r\n\r\n \tuseEffect(() => {\r\n\t\t getGifs(category)\r\n\t\t .then(imgs => {\r\n\t\t\t setstate({\r\n\t\t\t\tdata: imgs,\r\n\t\t\t\tloading: false\r\n\t\t\t });\r\n\t\t });\r\n\t }, [category])\r\n\t \r\n\treturn state; \r\n\r\n};","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n\tconst [categories, setCategories] = useState([\r\n\t\t\"One Punch\"\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t\t<AddCategory setCategories={setCategories} />\r\n\t\t\t<hr></hr>\r\n\r\n\t\t\t<ol>\r\n\t\t\t\t{\r\n\t\t\t\t\tcategories.map (category => (\r\n\t\t\t\t\t\t\t<GifGrid \r\n\t\t\t\t\t\t\tkey = { category }\r\n\t\t\t\t\t\t\tcategory = { category } />\r\n\t\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GifExpertApp;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}